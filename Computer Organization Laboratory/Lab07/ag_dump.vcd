$date
	Thu Mar 24 23:26:17 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 8 ! y [7:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 3 $ s [2:0] $end
$scope module assign7 $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 3 ' s [2:0] $end
$var reg 8 ( y [7:0] $end
$upscope $end
$upscope $end
$scope module booth $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 + clk $end
$var reg 4 , l [3:0] $end
$var reg 4 - m [3:0] $end
$var reg 1 . q $end
$var reg 8 / s [7:0] $end
$var reg 1 0 temp1 $end
$var reg 1 1 temp2 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 2
01
00
b0 /
z.
b0 -
b0 ,
z+
bz *
bz )
b0 (
b0 '
b101 &
b1010 %
b0 $
b101 #
b1010 "
b0 !
$end
#1
b101 !
b101 (
b1 $
b1 '
#2
b10100 !
b10100 (
b10 $
b10 '
#3
b0 !
b0 (
b11 $
b11 '
#4
b110010 !
b110010 (
b100 $
b100 '
#5
b101 !
b101 (
b101 $
b101 '
#6
b1010 !
b1010 (
b110 $
b110 '
#7
b101 !
b101 (
b111 $
b111 '
#8
